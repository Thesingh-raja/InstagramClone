{"ast":null,"code":"var _jsxFileName = \"/Users/thesinghraja/Desktop/insta-clone/src/pages/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/header.js';\nimport UserProfile from '../components/profile';\nimport { getUserByUsername } from '../services/firebase';\nimport * as ROUTES from '../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const {\n    username\n  } = useParams();\n  const [userExists, setUserExists] = useState(undefined);\n  const navigateTo = useNavigate();\n  useEffect(() => {\n    async function checkUserExistsToLoadProfile() {\n      const doesUserExist = await getUserByUsername(username);\n\n      if (!doesUserExist) {\n        navigateTo(ROUTES.NOT_FOUND);\n      } else {\n        setUserExists(true);\n      }\n    }\n\n    checkUserExistsToLoadProfile();\n  }, [username, navigateTo]);\n  return userExists ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto max-w-screen-lg\",\n      children: /*#__PURE__*/_jsxDEV(UserProfile, {\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this) : null;\n}\n\n_s(Profile, \"4YGixgaX8Y29TZwk2l9yFYvNRMY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/thesinghraja/Desktop/insta-clone/src/pages/profile.js"],"names":["React","useState","useEffect","useParams","useNavigate","Header","UserProfile","getUserByUsername","ROUTES","Profile","username","userExists","setUserExists","undefined","navigateTo","checkUserExistsToLoadProfile","doesUserExist","NOT_FOUND"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAeP,SAAS,EAA9B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACY,SAAD,CAA5C;AACA,QAAMC,UAAU,GAAEV,WAAW,EAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAea,4BAAf,GAA8C;AAC1C,YAAMC,aAAa,GAAG,MAAMT,iBAAiB,CAACG,QAAD,CAA7C;;AACA,UAAI,CAACM,aAAL,EAAoB;AAChBF,QAAAA,UAAU,CAACN,MAAM,CAACS,SAAR,CAAV;AACH,OAFD,MAEO;AACHL,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;;AACDG,IAAAA,4BAA4B;AAC/B,GAVQ,EAUN,CAACL,QAAD,EAAWI,UAAX,CAVM,CAAT;AAYA,SAAOH,UAAU,gBACb;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,GAOb,IAPJ;AAQH;;GAzBuBD,O;UACCN,S,EAEHC,W;;;KAHEK,O","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/header.js';\nimport UserProfile from '../components/profile';\nimport { getUserByUsername } from '../services/firebase';\nimport * as ROUTES from '../constants/routes';\n\nexport default function Profile() {\n    const { username } = useParams();\n    const [userExists, setUserExists] = useState(undefined);\n    const navigateTo= useNavigate();\n    \n    useEffect(() => {\n        async function checkUserExistsToLoadProfile() {\n            const doesUserExist = await getUserByUsername(username);\n            if (!doesUserExist) {\n                navigateTo(ROUTES.NOT_FOUND);\n            } else {\n                setUserExists(true);\n            }\n        }\n        checkUserExistsToLoadProfile();\n    }, [username, navigateTo])\n    \n    return userExists ? (\n        <div className=\"bg-gray\">\n            <Header />\n            <div className=\"mx-auto max-w-screen-lg\">\n                <UserProfile username={username} />\n            </div>\n        </div>\n    ) : null;\n}"]},"metadata":{},"sourceType":"module"}