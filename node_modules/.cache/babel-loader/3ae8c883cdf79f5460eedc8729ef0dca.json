{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { getUserByUserId } from \"../services/firebase\";\nimport UserContext from \"../context/user\";\nexport default function useUser() {\n  _s();\n\n  const [activeUser, setActiveUser] = useState({});\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function getUserObjByUserId() {\n      const [response] = await getUserByUserId(user.uid);\n      setActiveUser(response); // pass the user response to the state of activeUser\n    }\n\n    if (user && user.uid) {\n      getUserObjByUserId();\n    }\n  }, [user]);\n  console.log(activeUser);\n  return {\n    user: activeUser\n  };\n}\n\n_s(useUser, \"NPOsHS3meK9mHeqg7Qxh83ELIjI=\");","map":{"version":3,"sources":["/Users/thesinghraja/Desktop/insta-clone/src/hooks/use-user.js"],"names":["useState","useEffect","useContext","getUserByUserId","UserContext","useUser","activeUser","setActiveUser","user","getUserObjByUserId","response","uid","console","log"],"mappings":";;AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAWN,UAAU,CAACE,WAAD,CAA3B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,kBAAf,GAAoC;AAChC,YAAM,CAACC,QAAD,IAAa,MAAMP,eAAe,CAACK,IAAI,CAACG,GAAN,CAAxC;AACAJ,MAAAA,aAAa,CAACG,QAAD,CAAb,CAFgC,CAEP;AAC5B;;AACD,QAAIF,IAAI,IAAIA,IAAI,CAACG,GAAjB,EAAsB;AAClBF,MAAAA,kBAAkB;AACrB;AACJ,GARQ,EAQN,CAACD,IAAD,CARM,CAAT;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AAEA,SAAO;AAAEE,IAAAA,IAAI,EAAEF;AAAR,GAAP;AACH;;GAfuBD,O","sourcesContent":["\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { getUserByUserId } from \"../services/firebase\";\nimport UserContext from \"../context/user\";\n\nexport default function useUser() {\n    const [activeUser, setActiveUser] = useState({});\n    const { user } = useContext(UserContext);\n    useEffect(() => {\n        async function getUserObjByUserId() {\n            const [response] = await getUserByUserId(user.uid);\n            setActiveUser(response); // pass the user response to the state of activeUser\n        }\n        if (user && user.uid) {\n            getUserObjByUserId();\n        }\n    }, [user]);\n    console.log(activeUser);\n    \n    return { user: activeUser }; \n}\n   \n   \n    "]},"metadata":{},"sourceType":"module"}