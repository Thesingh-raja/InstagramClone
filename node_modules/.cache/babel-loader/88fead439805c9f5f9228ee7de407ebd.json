{"ast":null,"code":"var _jsxFileName = \"/Users/thesinghraja/Desktop/insta-clone/src/components/sidebar/suggestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport SuggestedProfile from './suggested-profile';\nimport { getSuggestedProfiles } from '../../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Suggestions = _ref => {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const [profiles, setProfiles] = useState([{\n    docId: '1',\n    userDocId: 1,\n    username: 'dali',\n    profileId: '2',\n    userId: '3'\n  }, {\n    docId: '2',\n    userDocId: 1,\n    username: 'orwell',\n    profileId: '2',\n    userId: '3'\n  }]);\n  useEffect(() => {\n    async function suggestedProfiles() {\n      const response = await getSuggestedProfiles(userId);\n      setProfiles(response);\n    } // if (userId) {\n    //     suggestedProfiles();\n    // }\n\n  }, [userId]);\n  return !profiles ? /*#__PURE__*/_jsxDEV(Skeleton, {\n    count: 1,\n    height: 150,\n    className: \"mt-5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this) : profiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: profiles.map(profile => /*#__PURE__*/_jsxDEV(SuggestedProfile, {\n      userDocId: profile.docId,\n      username: profile.username,\n      profileId: profile.userId,\n      userId: userId\n    }, profile.docId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(Suggestions, \"ik4vdrIVO+WZ84O8ye1FL6RxSNc=\");\n\n_c = Suggestions;\nexport default _c2 = /*#__PURE__*/memo(Suggestions);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Suggestions\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/thesinghraja/Desktop/insta-clone/src/components/sidebar/suggestions.js"],"names":["React","memo","useState","useEffect","Skeleton","SuggestedProfile","getSuggestedProfiles","Suggestions","userId","profiles","setProfiles","docId","userDocId","username","profileId","suggestedProfiles","response","length","map","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;AAEA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CACrC;AACIS,IAAAA,KAAK,EAAE,GADX;AAEIC,IAAAA,SAAS,EAAE,CAFf;AAGIC,IAAAA,QAAQ,EAAE,MAHd;AAIIC,IAAAA,SAAS,EAAE,GAJf;AAKIN,IAAAA,MAAM,EAAE;AALZ,GADqC,EAQrC;AACIG,IAAAA,KAAK,EAAE,GADX;AAEIC,IAAAA,SAAS,EAAE,CAFf;AAGIC,IAAAA,QAAQ,EAAE,QAHd;AAIIC,IAAAA,SAAS,EAAE,GAJf;AAKIN,IAAAA,MAAM,EAAE;AALZ,GARqC,CAAD,CAAxC;AAiBAL,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,iBAAf,GAAmC;AAC/B,YAAMC,QAAQ,GAAG,MAAMV,oBAAoB,CAACE,MAAD,CAA3C;AACAE,MAAAA,WAAW,CAACM,QAAD,CAAX;AACH,KAJW,CAKZ;AACA;AACA;;AACH,GARQ,EAQN,CAACR,MAAD,CARM,CAAT;AAUA,SAAO,CAACC,QAAD,gBACH,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,MAAM,EAAE,GAA5B;AAAiC,IAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADG,GAEHA,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,gBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACKR,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACV,QAAC,gBAAD;AAEI,MAAA,SAAS,EAAEA,OAAO,CAACR,KAFvB;AAGI,MAAA,QAAQ,EAAEQ,OAAO,CAACN,QAHtB;AAII,MAAA,SAAS,EAAEM,OAAO,CAACX,MAJvB;AAKI,MAAA,MAAM,EAAEA;AALZ,OACSW,OAAO,CAACR,KADjB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADA,GAYA,IAdJ;AAeH,CA3CD;;GAAMJ,W;;KAAAA,W;AA6CN,kCAAeN,IAAI,CAACM,WAAD,CAAnB","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport SuggestedProfile from './suggested-profile';\nimport { getSuggestedProfiles } from '../../services/firebase';\n\nconst Suggestions = ({ userId }) => {\n    const [profiles, setProfiles] = useState([\n        {\n            docId: '1',\n            userDocId: 1,\n            username: 'dali',\n            profileId: '2',\n            userId: '3'\n        },\n        {\n            docId: '2',\n            userDocId: 1,\n            username: 'orwell',\n            profileId: '2',\n            userId: '3'\n        }\n    ]);\n    \n    useEffect(() => {\n        async function suggestedProfiles() {\n            const response = await getSuggestedProfiles(userId);\n            setProfiles(response);\n        }\n        // if (userId) {\n        //     suggestedProfiles();\n        // }\n    }, [userId]);\n    \n    return !profiles ? (\n        <Skeleton count={1} height={150} className=\"mt-5\" />\n    ) : profiles.length > 0 ? (\n        <div className=\"grid\">\n            {profiles.map((profile) => (\n                <SuggestedProfile\n                    key={profile.docId}\n                    userDocId={profile.docId}\n                    username={profile.username}\n                    profileId={profile.userId}\n                    userId={userId}\n                />\n            ))}\n        </div>\n    ) : null;\n}\n\nexport default memo(Suggestions);"]},"metadata":{},"sourceType":"module"}