{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { getUserByUserId } from '../services/firebase';\nimport userContext from '../context/user';\nexport default function useUser() {\n  _s();\n\n  const [activeUser, setActiveUser] = useState();\n  const {\n    user\n  } = useContext(userContext);\n  useEffect(() => {\n    async function getUserObjByUserId() {\n      console.log(response);\n      const [response] = await getUserByUserId(user.uid);\n      setActiveUser({ ...response\n      });\n    }\n\n    if (user && user.id) {\n      getUserObjByUserId();\n    }\n  }, []);\n  return {\n    user: activeUser\n  };\n}\n\n_s(useUser, \"91S57+kkT6+2jIj7I/q1ks0W9Ms=\");","map":{"version":3,"sources":["/Users/thesinghraja/Desktop/insta-clone/src/hooks/use-user.js"],"names":["useState","useContext","useEffect","getUserByUserId","userContext","useUser","activeUser","setActiveUser","user","getUserObjByUserId","console","log","response","uid","id"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,eAAe,SAASC,OAAT,GACf;AAAA;;AACI,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BP,QAAQ,EAAzC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAASP,UAAU,CAACG,WAAD,CAAzB;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeO,kBAAf,GACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,YAAM,CAACA,QAAD,IAAY,MAAMT,eAAe,CAACK,IAAI,CAACK,GAAN,CAAvC;AACAN,MAAAA,aAAa,CAAC,EAAC,GAAGK;AAAJ,OAAD,CAAb;AACH;;AACD,QAAIJ,IAAI,IAAIA,IAAI,CAACM,EAAjB,EACA;AACIL,MAAAA,kBAAkB;AACrB;AACJ,GAXQ,EAWP,EAXO,CAAT;AAYA,SAAO;AAACD,IAAAA,IAAI,EAAEF;AAAP,GAAP;AACH;;GAlBuBD,O","sourcesContent":["import {useState, useContext, useEffect} from 'react';\nimport { getUserByUserId } from '../services/firebase'\nimport userContext from '../context/user'\n\nexport default function useUser()\n{\n    const [activeUser,setActiveUser]=useState();\n    const {user} = useContext(userContext);\n\n    useEffect(()=>{\n        async function getUserObjByUserId()\n        {\n            console.log(response)\n            const [response]= await getUserByUserId(user.uid)\n            setActiveUser({...response});\n        }\n        if (user && user.id)\n        {\n            getUserObjByUserId();\n        }\n    },[])\n    return {user: activeUser}\n}"]},"metadata":{},"sourceType":"module"}