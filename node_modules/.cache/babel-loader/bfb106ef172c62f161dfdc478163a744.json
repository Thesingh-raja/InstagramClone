{"ast":null,"code":"import { firebase, FieldValue } from '../lib/firebase';\nexport async function isUserFollowingProfile(activeUsername, profileUserId) {\n  const result = await firebase.firestore().collection('users').where('username', '==', activeUsername) // karl (active logged in user)\n  .where('following', 'array-contains', profileUserId).get();\n  const [response = {}] = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return !!response.fullName;\n}\nexport async function doesUsernameExist(username) {\n  const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n  return result.docs.map(user => user.data().length > 0);\n}\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n  const user = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return user;\n}\nexport async function getUserFollowedPhotos(userId, followingUserIds) {\n  const result = await firebase.firestore().collection('photos').where('userId', 'in', followingUserIds).get();\n  const userFollowedPhotos = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  const photosWithUserDetails = await Promise.all(userFollowedPhotos.map(async photo => {\n    let userLikedPhoto = false;\n\n    if (photo.likes.includes(userId)) {\n      userLikedPhoto = true;\n    }\n\n    const user = await getUserByUserId(photo.userId);\n    const username = user[0].username;\n    return {\n      username,\n      ...photo,\n      userLikedPhoto\n    };\n  }));\n  return photosWithUserDetails;\n}\nexport async function getSuggestedProfiles(userId) {\n  const result = await firebase.firestore().collection('users').limit(10).get();\n  const [{\n    following\n  }] = await getUserByUserId(userId);\n  return result.docs.map(user => ({ ...user.data(),\n    docId: user.id\n  })).filter(profile => profile.userId !== userId && !following.includes(profile.userId));\n}\nexport async function updateUserFollowing(docId, profileId, isFollowingProfile) {\n  return firebase.firestore().collection('users').doc(docId).update({\n    following: isFollowingProfile ? FieldValue.arrayRemove(profileId) : FieldValue.arrayUnion(profileId)\n  });\n}\nexport async function updateFollowedUserFollowers(docId, followingUserId, isFollowingProfile) {\n  return firebase.firestore().collection('users').doc(docId).update({\n    following: isFollowingProfile ? FieldValue.arrayRemove(followingUserId) : FieldValue.arrayUnion(followingUserId)\n  });\n}\nexport async function getUserByUsername(username) {\n  const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n  const user = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return user.length > 0 ? user : false;\n}\nexport async function getUserIdByUsername(username) {\n  const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n  const [{\n    userId = null\n  }] = result.docs.map(item => ({ ...item.data()\n  }));\n  return userId;\n}\nexport async function getUserPhotosByUsername(username) {\n  const userId = await getUserIdByUsername(username);\n  const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n  const photos = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  return photos;\n}\nexport async function toggleFollow(isFollowingProfile, activeUserDocId, profileDocId, profileId, followingUserId) {\n  await updateUserFollowing(activeUserDocId, profileId, isFollowingProfile);\n  await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}","map":{"version":3,"sources":["/Users/thesinghraja/Desktop/insta-clone/src/services/firebase.js"],"names":["firebase","FieldValue","isUserFollowingProfile","activeUsername","profileUserId","result","firestore","collection","where","get","response","docs","map","item","data","docId","id","fullName","doesUsernameExist","username","user","length","getUserByUserId","userId","getUserFollowedPhotos","followingUserIds","userFollowedPhotos","photosWithUserDetails","Promise","all","photo","userLikedPhoto","likes","includes","getSuggestedProfiles","limit","following","filter","profile","updateUserFollowing","profileId","isFollowingProfile","doc","update","arrayRemove","arrayUnion","updateFollowedUserFollowers","followingUserId","getUserByUsername","getUserIdByUsername","getUserPhotosByUsername","photos","toggleFollow","activeUserDocId","profileDocId"],"mappings":"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","sourcesContent":["import { firebase, FieldValue } from '../lib/firebase';\n\nexport async function isUserFollowingProfile(activeUsername, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', activeUsername) // karl (active logged in user)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n        \n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id\n    }));\n    \n    return !!response.fullName;\n}\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .get();\n        \n    return result.docs.map((user) => user.data().length > 0);\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('userId', '==', userId)\n        .get();\n        \n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id\n    }));\n \n    return user;       \n}\n\nexport async function getUserFollowedPhotos(userId, followingUserIds) {\n    const result = await firebase\n        .firestore()\n        .collection('photos')\n        .where('userId', 'in', followingUserIds)\n        .get();\n        \n    const userFollowedPhotos = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id\n    }));\n    \n    const photosWithUserDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const user = await getUserByUserId(photo.userId);\n            const username = user[0].username;\n            return { username, ...photo, userLikedPhoto };\n        })\n    );\n    \n    return photosWithUserDetails;\n}\n\nexport async function getSuggestedProfiles(userId) {\n    const result = await firebase.firestore().collection('users').limit(10).get();\n    const [{ following }] = await getUserByUserId(userId);\n        \n    return result.docs\n        .map((user) => ({ ...user.data(), docId: user.id }))\n        .filter((profile) => profile.userId !== userId && !following.includes(profile.userId));\n}\n    \nexport async function updateUserFollowing(docId, profileId, isFollowingProfile) {\n    return firebase\n        .firestore()\n        .collection('users')\n        .doc(docId)\n        .update({\n            following: isFollowingProfile\n                ? FieldValue.arrayRemove(profileId)\n                : FieldValue.arrayUnion(profileId)\n        });\n}\n\nexport async function updateFollowedUserFollowers(docId, followingUserId, isFollowingProfile) {\n    return firebase\n        .firestore()\n        .collection('users')\n        .doc(docId)\n        .update({\n            following: isFollowingProfile\n                ? FieldValue.arrayRemove(followingUserId)\n                : FieldValue.arrayUnion(followingUserId)\n        });\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .get();\n        \n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id\n    }));\n \n    return user.length > 0 ? user : false;  \n}\n\nexport async function getUserIdByUsername(username) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .get();\n        \n    const [{ userId = null }] = result.docs.map((item) => ({\n        ...item.data(),\n    }));\n    \n    return userId;\n}\n\nexport async function getUserPhotosByUsername(username) {\n    const userId = await getUserIdByUsername(username);\n    const result = await firebase\n        .firestore()\n        .collection('photos')\n        .where('userId', '==', userId)\n        .get();\n        \n    const photos = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id\n    }));\n    \n    return photos;\n}\n\nexport async function toggleFollow(\n    isFollowingProfile,\n    activeUserDocId,\n    profileDocId,\n    profileId,\n    followingUserId\n) {\n    await updateUserFollowing(activeUserDocId, profileId, isFollowingProfile);\n    await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}"]},"metadata":{},"sourceType":"module"}