{"ast":null,"code":"import { firebase, Fieldvalue } from '../lib/firebase';\nexport const doesUsernameExist = async username => {\n  const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n  return result.docs.map(user => user.data.length > 0);\n};\nexport const getUserByUserId = async userId => {\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n  const user = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n};\nexport async function getUserFollowedPhotos(userId, followingUserIds) {\n  const result = await firebase.firestore().collection('users').where('userId', 'in', followingUserIds).get();\n  const userFollowedPhotos = result.docs.map(item => ({ ...item.data(),\n    docId: item.id\n  }));\n  const photosWithUserDetails = await Promise.all(userFollowedPhotos.map(async photo => {\n    let userLikedPhoto = false;\n\n    if (photo.likes.includes(userId)) {\n      userLikedPhoto = true;\n    }\n\n    const user = await getUserByUserId(photo.userId);\n    const username = user[0].username;\n    return {\n      username,\n      ...photo,\n      userLikedPhoto\n    };\n  }));\n  return photosWithUserDetails;\n}","map":{"version":3,"sources":["/Users/thesinghraja/Desktop/insta-clone/src/services/firebase.js"],"names":["firebase","Fieldvalue","doesUsernameExist","username","result","firestore","collection","where","get","docs","map","user","data","length","getUserByUserId","userId","item","docId","id","getUserFollowedPhotos","followingUserIds","userFollowedPhotos","photosWithUserDetails","Promise","all","photo","userLikedPhoto","likes","includes"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,iBAAnC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAMC,QAAN,IACjC;AACI,QAAMC,MAAM,GAAC,MAAMJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,KAAzC,CAA+C,UAA/C,EAA0D,IAA1D,EAA+DJ,QAA/D,EAAyEK,GAAzE,EAAnB;AAEA,SAAOJ,MAAM,CAACK,IAAP,CAAYC,GAAZ,CAAiBC,IAAD,IAAQA,IAAI,CAACC,IAAL,CAAUC,MAAV,GAAmB,CAA3C,CAAP;AACH,CALM;AAOP,OAAO,MAAMC,eAAe,GAAG,MAAMC,MAAN,IAC/B;AACI,QAAMX,MAAM,GAAC,MAAMJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,KAAzC,CAA+C,QAA/C,EAAwD,IAAxD,EAA6DQ,MAA7D,EAAqEP,GAArE,EAAnB;AAEA,QAAMG,IAAI,GAAGP,MAAM,CAACK,IAAP,CAAYC,GAAZ,CAAiBM,IAAD,KAAS,EAClC,GAAGA,IAAI,CAACJ,IAAL,EAD+B;AAElCK,IAAAA,KAAK,EAACD,IAAI,CAACE;AAFuB,GAAT,CAAhB,CAAb;AAIH,CARM;AASP,OAAO,eAAeC,qBAAf,CAAqCJ,MAArC,EAA4CK,gBAA5C,EACP;AACI,QAAMhB,MAAM,GAAC,MAAMJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,KAAzC,CAA+C,QAA/C,EAAwD,IAAxD,EAA6Da,gBAA7D,EAA+EZ,GAA/E,EAAnB;AAEA,QAAMa,kBAAkB,GAAGjB,MAAM,CAACK,IAAP,CAAYC,GAAZ,CAAiBM,IAAD,KAAS,EAChD,GAAGA,IAAI,CAACJ,IAAL,EAD6C;AAEhDK,IAAAA,KAAK,EAACD,IAAI,CAACE;AAFqC,GAAT,CAAhB,CAA3B;AAKC,QAAMI,qBAAqB,GAAG,MAAMC,OAAO,CAACC,GAAR,CACjCH,kBAAkB,CAACX,GAAnB,CAAuB,MAAOe,KAAP,IAAiB;AACpC,QAAIC,cAAc,GAAG,KAArB;;AACA,QAAID,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBb,MAArB,CAAJ,EAAkC;AAC9BW,MAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,UAAMf,IAAI,GAAG,MAAMG,eAAe,CAACW,KAAK,CAACV,MAAP,CAAlC;AACA,UAAMZ,QAAQ,GAAGQ,IAAI,CAAC,CAAD,CAAJ,CAAQR,QAAzB;AACA,WAAO;AAAEA,MAAAA,QAAF;AAAY,SAAGsB,KAAf;AAAsBC,MAAAA;AAAtB,KAAP;AACH,GARD,CADiC,CAApC;AAYD,SAAOJ,qBAAP;AACH","sourcesContent":["import {firebase, Fieldvalue} from '../lib/firebase'\n\nexport const doesUsernameExist = async(username) =>\n{\n    const result=await firebase.firestore().collection('users').where('username','==',username).get();\n\n    return result.docs.map((user)=>user.data.length > 0)\n}\n\nexport const getUserByUserId = async(userId) =>\n{\n    const result=await firebase.firestore().collection('users').where('userId','==',userId).get();\n\n    const user = result.docs.map((item)=>({\n        ...item.data(),\n        docId:item.id\n    }))\n}\nexport async function getUserFollowedPhotos(userId,followingUserIds)\n{\n    const result=await firebase.firestore().collection('users').where('userId','in',followingUserIds).get();\n\n    const userFollowedPhotos = result.docs.map((item)=>({\n        ...item.data(),\n        docId:item.id\n    \n    }))\n     const photosWithUserDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const user = await getUserByUserId(photo.userId);\n            const username = user[0].username;\n            return { username, ...photo, userLikedPhoto };\n        })\n    )\n    \n    return photosWithUserDetails;\n}"]},"metadata":{},"sourceType":"module"}